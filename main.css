@import url("https://fonts.googleapis.com/css2?family=Ropa+Sans&display=swap");
:root {
  --yellow: #ffd600;
  --details-header: #748687;
  --lighter-gray: #e1dede;
  --light-gray: #c4c4c4;
  --gray: #8e8e8e;
  --dark-gray: #535556;
  --highlight-gray: #444444;
}
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
body {
  font-family: "Ropa Sans", sans-serif;
  background-color: var(--light-gray);
}

.wrapper {
  max-width: 900px;
  margin: auto;
  background-color: var(--dark-gray);
}
header {
  background-image: url(./assets/header-background.png);
  background-repeat: no-repeat;
  background-size: contain;
  min-height: 30vh;
  display: flex;
  align-items: center;
}
header > p {
  text-transform: uppercase;
  color: var(--yellow);
  font-size: 2rem;
  padding-left: 3rem;
  letter-spacing: 0.9rem;
  max-width: 40%;
}

.characters > ul {
  list-style-type: none;
}

.characters > ul > li {
  transition: all 0.5s ease-in-out;
  position: relative;
  padding: 0.5rem;
  animation: slide-up 0.4s ease;
}

@keyframes fase {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.characters > ul > li:nth-child(odd) {
  background-color: var(--gray);
}
.characters > ul > li:hover {
  background-color: var(--highlight-gray);
}
.active {
  background-color: var(--highlight-gray);
}
.active::after {
  content: "â–¶";
  height: 2rem;
  width: 2rem;
  color: white;
  position: absolute;
  right: 20%;
  animation: arrow-fade 3s ease infinite;
}

@keyframes arrow-fade {
  0% {
    opacity: 0;
  }
  40% {
    opacity: 1;
  }

  100% {
    transform: translateX(250%) rotateX(360deg);
    opacity: 0;
  }
}
.characters {
  padding-bottom: 3rem;
}
.characters > div {
  text-align: center;
}
.characters > div:last-child * {
  margin: 0 0.5rem;
}
.characters > div button {
  font-size: 1.5rem;
  background-color: transparent;
  border: none;
}
.container {
  display: flex;
  justify-content: space-around;
}

.container section,
.container aside {
  font-size: 1rem;

  line-height: 1.5rem;
  letter-spacing: 0.1rem;
  /* height: 20%; */
  width: 20rem;
  background-color: var(--light-gray);
  border-radius: 14px;
}
.container section h5,
.container aside h5,
.container section p,
.container aside p {
  animation: slide-up 0.4s ease;
}

@keyframes slide-up {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.container {
  transform: translateY(-10%);
}
.container section > p,
.container aside > p {
  background-color: var(--details-header);
  text-align: center;
  color: var(--yellow);
  padding: 1rem 0;
  font-size: 1.3rem;
  border-top-left-radius: 14px;
  border-top-right-radius: 14px;
}

aside > article {
  margin-bottom: 1rem;
  border-bottom: var(--light-gray) solid 1px;
}

.container section > p {
  background-color: var(--dark-gray);
}

.container article {
  padding: 1rem;
}

.container h5 {
  font-size: 1.4rem;
}

.btns {
  display: flex;
  justify-content: space-around;
}
input {
  display: none;
}

label {
  font-size: 1rem;
  background-color: var(--lighter-gray);
  padding: 0.4rem 0.6rem;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
}
input[type="radio"]:checked + label {
  background-color: var(--gray);
  color: var(--yellow);
}

.extra-info > article {
  background-color: var(--gray);
  border-bottom-left-radius: 14px;
  border-bottom-right-radius: 14px;
}

.loading-spinner {
  animation: loading-spinner 1s linear infinite;
}
.ul-loader {
  margin: 12rem 0;
}
.extraInfo {
  margin: 4rem 0;
}
.spinner-div {
  text-align: center;
}

@keyframes loading-spinner {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}
.hidden {
  display: none;
}

.svg {
  position: absolute;
  z-index: -1;
  transition: all ease-in-out 0.5s;
}

.front {
  z-index: 3;
}
.bb8-base {
  animation: dash 4s infinite alternate cubic-bezier(0.645, 0.045, 0.55, 1);
}
@keyframes dash {
  to {
    transform: translate(50px) rotate(-20deg); /* starting values 0 translation -40 rotation */
  }
}

/* animate the body of bb-8 to rotate
! the rotation occurs from the center of the body
*/
.bb8-center {
  animation: rotate 0.8s infinite linear;
}
@keyframes rotate {
  to {
    transform: rotate(-360deg);
  }
}

/* animate the ground to translate horizontally
! the translation continuously occurs from side to side
*/
.ground {
  animation: translate 0.8s -0.2s infinite linear;
}
@keyframes translate {
  to {
    transform: translateX(100%);
  }
}

/* animate the dashes and particles to translate horizontally
double the duration, but same velocity to show the elements only as the droid leans left 
*/
.dash,
.particle {
  animation: translateDashesParticles 1.6s infinite linear;
}
@keyframes translateDashesParticles {
  50%,
  100% {
    transform: translateX(100%);
  }
}

/* animate the reflection on the droid's lens */
.reflection {
  animation: translateReflection 0.8s infinite linear;
}
@keyframes translateReflection {
  0%,
  25% {
    transform: translateX(-20px);
  }
  75%,
  100% {
    transform: translateX(20px);
  }
}
